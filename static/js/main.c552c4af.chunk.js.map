{"version":3,"sources":["utils/Api.js","constants/ApiConstants.js","components/Loader/index.js","components/Week/index.js","components/FavoritesItem/index.js","components/FavoritesBar/index.js","containers/App.js","serviceWorker.js","index.js","assets/img/loader.gif"],"names":["callApi","url","options","fetch","then","response","status","json","Error","statusText","DOMAIN_URL","KEY","Loader","react_default","a","createElement","style","width","concat","src","loaderImg","alt","Week","defineDay","ts","Date","getDay","console","log","_this2","this","weekTemp","props","className","slice","map","day","index","key","temp","React","Component","FavoritesItem","_this$props","name","id","href","type","FavoritesBar","favorites","town","components_FavoritesItem","requestName","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","handleClick","_this$state","state","lat","lng","searchValue","getData","handleChange","_this$state2","setState","target","value","city","currentTemp","error","isLoading","data","catch","err","message","city_name","addToFavorites","_this$state3","now","newFavorites","unshift","localData","JSON","stringify","localStorage","setItem","checkRequest","place","_this$state4","geometry","latC","viewport","l","j","lngC","cityC","formatted_address","parse","getItem","_this$state5","onSubmit","react_google_autocomplete_default","onChange","onPlaceSelected","types","onClick","fontSize","color","Loader_Loader","src_components_Week","length","components_FavoritesBar","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c552c4af.chunk.js","sourcesContent":["export const callApi = (url, options) =>\r\n  fetch(url, options).then(response => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n","export const DOMAIN_URL = 'https://api.weatherbit.io/v2.0//forecast/daily';\nexport const KEY = '8fab1e8c72554b01807ac34da3e2cbfc';","import React from 'react';\r\nimport loaderImg from '../../assets/img/loader.gif';\r\n\r\nexport const Loader = () => <img style={{ width: `${100}px` }} src={loaderImg} alt=\"loader\" />;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.sass';\r\n\r\nclass Week extends React.Component {\r\n  defineDay = ts => {\r\n    // console.log(new Date(1000 * ts));\r\n    switch (new Date(1000 * ts).getDay()) {\r\n      case 0:\r\n        return 'Sunday';\r\n      case 1:\r\n        return 'Monday';\r\n      case 2:\r\n        return 'Tuesday';\r\n      case 3:\r\n        return 'Wednesday';\r\n      case 4:\r\n        return 'Thursday';\r\n      case 5:\r\n        return 'Friday';\r\n      case 6:\r\n        return 'Saturday';\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { weekTemp } = this.props;\r\n    return (\r\n      <div>\r\n        <h5 className=\"week__title\">forecast for the week</h5>\r\n        <div className=\"week__day-wrap\">\r\n          {weekTemp.slice(1, 8).map((day, index) => (\r\n            <div className=\"week__day\" key={index}>\r\n              <p>{this.defineDay(day.ts)}</p>\r\n              <p>{day.temp}Â°</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWeek.propTypes = {\r\n  weekTemp: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FavoritesItem extends React.Component {\r\n  render() {\r\n    const { name, id } = this.props;\r\n    return (\r\n      <li>\r\n        <a href=\"/\">{name}</a>\r\n        {console.log(id)}\r\n        <button type=\"button\">X</button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default FavoritesItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavoritesItem from '../FavoritesItem';\r\n\r\nclass FavoritesBar extends React.Component {\r\n  render() {\r\n    const { favorites } = this.props;\r\n    return (\r\n      <div>\r\n        <h2>Favorites</h2>\r\n        <ul>\r\n          {favorites.map(town => (\r\n            <FavoritesItem key={town.id} id={town.id} name={town.requestName} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesBar.propTypes = {\r\n  favorites: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FavoritesBar;\r\n","import React from 'react';\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { callApi } from '../utils/Api';\r\nimport { DOMAIN_URL, KEY } from '../constants/ApiConstants';\r\nimport { Loader } from '../components/Loader';\r\nimport Week from '../components/Week';\r\nimport FavoritesBar from '../components/FavoritesBar';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      requestName: '',\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      error: null,\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n      favorites: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const localData = JSON.parse(localStorage.getItem('localWeatherData'));\r\n\r\n    if (localData) {\r\n      this.setState({ favorites: localData });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { lat, lng, searchValue } = this.state;\r\n    this.getData(lat, lng, searchValue);\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { lat, lng, requestName } = this.state;\r\n\r\n    this.setState({\r\n      searchValue: e.target.value,\r\n    });\r\n\r\n    if (lat && lng) {\r\n      this.setState({\r\n        lat: null,\r\n        lng: null,\r\n      });\r\n    }\r\n\r\n    if (requestName) {\r\n      this.setState({\r\n        requestName: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  getData = (lat, lng, city) => {\r\n    if (!lat && !lng && city === '') {\r\n      return this.setState({\r\n        searchValue: '',\r\n        currentTemp: null,\r\n        error: 'ÐÐµ Ð² ÑÑÐ¾Ñ ÑÐ°Ð·, Ð¿ÐµÑÑÑÐ¾Ðº)',\r\n        isLoading: false,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      error: null,\r\n      isLoading: true,\r\n      weekTemp: null,\r\n    });\r\n\r\n    if (!lat && !lng && city !== '') {\r\n      return callApi(`${DOMAIN_URL}/forecast/daily?city=${city}&key=${KEY}`)\r\n        .then(response => {\r\n          this.setState({\r\n            requestName: response.city_name,\r\n            currentTemp: response.data[0].temp,\r\n            error: null,\r\n            isLoading: false,\r\n            weekTemp: response.data,\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            error: err.message,\r\n            currentTemp: null,\r\n            isLoading: false,\r\n          });\r\n        });\r\n    }\r\n\r\n    callApi(`${DOMAIN_URL}/?lat=${lat}&lon=${lng}&key=${KEY}`)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTemp: response.data[0].temp,\r\n          error: null,\r\n          isLoading: false,\r\n          weekTemp: response.data,\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message,\r\n          currentTemp: null,\r\n          isLoading: false,\r\n          lng: null,\r\n          lat: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  addToFavorites = () => {\r\n    const { lat, lng, requestName, favorites } = this.state;\r\n\r\n    const data = {\r\n      id: Date.now(),\r\n      lat,\r\n      lng,\r\n      requestName,\r\n    };\r\n\r\n    const newFavorites = favorites;\r\n    newFavorites.unshift(data);\r\n\r\n    const localData = JSON.stringify(newFavorites);\r\n\r\n    localStorage.setItem('localWeatherData', localData);\r\n\r\n    return this.setState({\r\n      favorites: newFavorites,\r\n    });\r\n  };\r\n\r\n  checkRequest = place => {\r\n    const { lat, lng } = this.state;\r\n\r\n    if (place.geometry) {\r\n      const latC = place.geometry.viewport.l.j;\r\n      const lngC = place.geometry.viewport.l.l;\r\n      const cityC = place.formatted_address;\r\n\r\n      this.setState({\r\n        requestName: cityC,\r\n        searchValue: '',\r\n        lat: latC,\r\n        lng: lngC,\r\n      });\r\n\r\n      return this.getData(latC, lngC, cityC);\r\n    }\r\n    const city = place.name;\r\n\r\n    this.getData(lat, lng, city);\r\n  };\r\n\r\n  render() {\r\n    const { requestName, searchValue, currentTemp, error, isLoading, weekTemp, favorites } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Autocomplete\r\n            value={searchValue}\r\n            onChange={this.handleChange}\r\n            style={{ width: '50%' }}\r\n            onPlaceSelected={place => {\r\n              this.checkRequest(place);\r\n            }}\r\n            types={['(regions)']}\r\n          />\r\n          <button type=\"button\" onClick={this.handleClick} name=\"send\">\r\n            search\r\n          </button>\r\n        </form>\r\n        {currentTemp ? (\r\n          <div>\r\n            <h1>{requestName}</h1>\r\n            <button onClick={this.addToFavorites} type=\"button\">\r\n              ÐÐ¾Ð±Ð°Ð²Ð¸ÑÑ Ð² ÐÐ·Ð±ÑÐ°Ð½Ð½Ð¾Ðµ\r\n            </button>\r\n            <p style={{ fontSize: `${36}px` }}>Now {currentTemp}Â° Ð³ÑÐ°Ð´ÑÑÐ¸ÐºÐ¾Ð²</p>\r\n          </div>\r\n        ) : null}\r\n        {error ? <p style={{ fontSize: `${36}px`, color: 'brown' }}>{error}</p> : null}\r\n        {isLoading ? <Loader /> : null}\r\n        {weekTemp ? <Week weekTemp={weekTemp} /> : null}\r\n        {favorites.length ? <FavoritesBar favorites={favorites} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.sass';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.0315fe01.gif\";"],"sourceRoot":""}