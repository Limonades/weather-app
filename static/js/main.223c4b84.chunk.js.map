{"version":3,"sources":["assets/img/loader.gif","utils/Api.js","constants/ApiConstants.js","components/Loader/index.js","components/Week/index.js","components/FavoritesItem/index.js","components/FavoritesBar/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","callApi","url","options","fetch","then","response","status","json","Error","statusText","DOMAIN_URL","KEY","Loader","react_default","a","createElement","style","width","concat","src","loaderImg","alt","Week","defineDay","ts","Date","getDay","console","log","_this2","this","weekTemp","props","className","slice","map","day","index","key","temp","React","Component","FavoritesItem","handleClick","_this$props","_this","id","removeFromFavorites","handleSearch","e","preventDefault","_this$props2","lat","lng","name","getData","_this$props3","favoritesWeather","onClick","href","result","data","type","height","xmlns","fillRule","clipRule","fill","d","defaultProps","FavoritesBar","favorites","viewBox","town","i","components_FavoritesItem","requestName","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","_this$state","state","searchValue","setState","currentTemp","error","isLoading","handleChange","_this$state2","target","value","city","wind","wind_spd","weatherDescr","weather","description","wetness","rh","changeHash","catch","err","message","city_name","lon","popstateEvent","window","history","pushState","getUrl","location","search","urlParams","URLSearchParams","urlLat","get","urlLng","urlName","addToFavorites","_this$state3","now","newFavorites","newFavoritesNames","forEach","item","push","checkFavorites","unshift","length","localData","JSON","stringify","localStorage","setItem","favoritesTemp","favoritesCopy","favoritesId","indexOf","splice","arr","favArr","Promise","resolve","reject","res","all","values","sort","b","checkRequest","place","_this$state4","geometry","latC","lngC","cityC","formatted_address","getCurrentDate","month","date","getDate","getMonth","parse","getItem","addEventListener","localFavorites","stateFavorites","_this3","_this$state5","onSubmit","react_google_autocomplete_default","onChange","placeholder","onPlaceSelected","types","fontSize","color","Loader_Loader","src_components_Week","src_components_FavoritesBar","Boolean","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.223c4b84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.0315fe01.gif\";","export const callApi = (url, options) =>\r\n  fetch(url, options).then(response => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n","export const DOMAIN_URL = 'https://api.weatherbit.io/v2.0//forecast/daily';\r\nexport const KEY = '8fab1e8c72554b01807ac34da3e2cbfc';\r\n","import React from 'react';\r\nimport loaderImg from '../../assets/img/loader.gif';\r\n\r\nexport const Loader = () => <img style={{ width: `${100}px` }} src={loaderImg} alt=\"loader\" />;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.sass';\r\n\r\nclass Week extends React.Component {\r\n  defineDay = ts => {\r\n    // console.log(new Date(1000 * ts));\r\n    switch (new Date(1000 * ts).getDay()) {\r\n      case 0:\r\n        return 'S';\r\n      case 1:\r\n        return 'M';\r\n      case 2:\r\n        return 'T';\r\n      case 3:\r\n        return 'W';\r\n      case 4:\r\n        return 'T';\r\n      case 5:\r\n        return 'F';\r\n      case 6:\r\n        return 'S';\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { weekTemp } = this.props;\r\n    return (\r\n      <div className=\"week__week\">\r\n        <div className=\"week__day-wrap\">\r\n          {weekTemp.slice(1, 8).map((day, index) => (\r\n            <div className=\"week__day\" key={index}>\r\n              <p>{this.defineDay(day.ts)}</p>\r\n              <i>w</i>\r\n              <p>{day.temp}°</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWeek.propTypes = {\r\n  weekTemp: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FavoritesItem extends React.Component {\r\n  handleClick = () => {\r\n    const { id, removeFromFavorites } = this.props;\r\n\r\n    removeFromFavorites(id);\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    const { lat, lng, name, getData } = this.props;\r\n    getData(lat, lng, name);\r\n  };\r\n\r\n  render() {\r\n    const { name, favoritesWeather } = this.props;\r\n    console.log(favoritesWeather);\r\n    return (\r\n      <li className=\"favorites__list-item\">\r\n        <a className=\"favorites__list-btn text-style-2\" onClick={this.handleSearch} href=\"/\">\r\n          <p>{name}</p>\r\n\r\n          {favoritesWeather ? <span>{favoritesWeather.result.data[0].temp}°</span> : null}\r\n          <button className=\"favorites__list-remove-btn\" onClick={this.handleClick} type=\"button\">\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              fill=\"white\"\r\n            >\r\n              <path d=\"M19 24h-14c-1.104 0-2-.896-2-2v-16h18v16c0 1.104-.896 2-2 2m-9-14c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6 0c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6-5h-20v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2zm-12-2h4v-1h-4v1z\" />\r\n            </svg>\r\n          </button>\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  removeFromFavorites: PropTypes.func.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n  lat: PropTypes.number,\r\n  lng: PropTypes.number,\r\n};\r\n\r\nFavoritesItem.defaultProps = {\r\n  lat: null,\r\n  lng: null,\r\n};\r\n\r\nexport default FavoritesItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavoritesItem from '../FavoritesItem';\r\nimport './index.sass';\r\n\r\nclass FavoritesBar extends React.Component {\r\n  render() {\r\n    const { favorites, removeFromFavorites, getData, favoritesWeather } = this.props;\r\n    console.log(favoritesWeather);\r\n    return (\r\n      <div className=\"favorites\">\r\n        <h2 className=\"text-style-2\">\r\n          <svg\r\n            fill=\"white\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524-4.721 2.525.942-5.27-3.861-3.71 5.305-.733 2.335-4.817zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z\" />\r\n          </svg>\r\n          Favorites\r\n        </h2>\r\n        <ul className=\"favorites__list\">\r\n          {favorites.map((town, i) => (\r\n            <FavoritesItem\r\n              removeFromFavorites={removeFromFavorites}\r\n              favoritesWeather={favoritesWeather[i]}\r\n              getData={getData}\r\n              key={town.id}\r\n              id={town.id}\r\n              name={town.requestName}\r\n              lat={town.lat}\r\n              lng={town.lng}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesBar.propTypes = {\r\n  favorites: PropTypes.array.isRequired,\r\n  removeFromFavorites: PropTypes.func.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FavoritesBar;\r\n","import React from 'react';\r\nimport './index.sass';\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { callApi } from '../utils/Api';\r\nimport { DOMAIN_URL, KEY } from '../constants/ApiConstants';\r\nimport { Loader } from '../components/Loader';\r\nimport Week from '../components/Week';\r\nimport FavoritesBar from '../components/FavoritesBar';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      requestName: '',\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      wind: null,\r\n      weatherDescr: null,\r\n      wetness: null,\r\n      error: null,\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n      favorites: [],\r\n      popstateEvent: false,\r\n      favoritesWeather: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const localData = JSON.parse(localStorage.getItem('localWeatherData'));\r\n\r\n    this.getUrl();\r\n\r\n    window.addEventListener('popstate', () => {\r\n      this.setState({\r\n        popstateEvent: true,\r\n      });\r\n\r\n      this.getUrl();\r\n    });\r\n\r\n    if (localData) {\r\n      this.setState({ favorites: localData });\r\n      this.favoritesTemp(localData);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { favorites } = this.state;\r\n\r\n    const localFavorites = JSON.parse(localStorage.getItem('localWeatherData'));\r\n    const stateFavorites = JSON.stringify(favorites);\r\n\r\n    if (!localFavorites) {\r\n      return;\r\n    }\r\n\r\n    if (favorites.length !== localFavorites.length) {\r\n      localStorage.setItem('localWeatherData', stateFavorites);\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { lat, lng, searchValue } = this.state;\r\n\r\n    if (searchValue !== '') {\r\n      return this.getData(lat, lng, searchValue);\r\n    }\r\n\r\n    this.setState({\r\n      currentTemp: null,\r\n      error: 'Не в этот раз, петушок)',\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { lat, lng, requestName } = this.state;\r\n\r\n    this.setState({\r\n      searchValue: e.target.value,\r\n    });\r\n\r\n    if (lat && lng) {\r\n      this.setState({\r\n        lat: null,\r\n        lng: null,\r\n      });\r\n    }\r\n\r\n    // if (requestName) {\r\n    //   this.setState({\r\n    //     requestName: '',\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  getData = (lat, lng, city) => {\r\n    if (!lat && !lng && city === '') {\r\n      return this.setState({\r\n        searchValue: '',\r\n        currentTemp: null,\r\n        error: 'Не в этот раз, петушок)',\r\n        isLoading: false,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: '',\r\n      // currentTemp: null,\r\n      error: null,\r\n      isLoading: true,\r\n      // weekTemp: null,\r\n    });\r\n\r\n    if (!lat && !lng && city !== '') {\r\n      return callApi(`${DOMAIN_URL}/forecast/daily?city=${city}&key=${KEY}`)\r\n        .then(response => {\r\n          console.log(response);\r\n          this.setState({\r\n            requestName: response.city_name,\r\n            currentTemp: response.data[0].temp,\r\n            error: null,\r\n            isLoading: false,\r\n            weekTemp: response.data,\r\n          });\r\n          this.changeHash(response.lat, response.lon, response.city_name);\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            error: err.message,\r\n            currentTemp: null,\r\n            isLoading: false,\r\n          });\r\n        });\r\n    }\r\n\r\n    callApi(`${DOMAIN_URL}/?lat=${lat}&lon=${lng}&key=${KEY}`)\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          currentTemp: response.data[0].temp,\r\n          wind: response.data[0].wind_spd,\r\n          weatherDescr: response.data[0].weather.description,\r\n          wetness: response.data[0].rh,\r\n          error: null,\r\n          isLoading: false,\r\n          weekTemp: response.data,\r\n          requestName: `${city}`,\r\n        });\r\n        this.changeHash(lat, lng, city);\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message,\r\n          currentTemp: null,\r\n          isLoading: false,\r\n          lng: null,\r\n          lat: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  changeHash = (lat, lng, city) => {\r\n    const { popstateEvent } = this.state;\r\n\r\n    if (popstateEvent) {\r\n      return this.setState({\r\n        popstateEvent: false,\r\n      });\r\n    }\r\n\r\n    const state = {\r\n      lat,\r\n      lng,\r\n      city,\r\n    };\r\n\r\n    const title = '';\r\n    const url = `?lat=${lat}&lng=${lng}&city=${city}`;\r\n\r\n    window.history.pushState(state, title, url);\r\n  };\r\n\r\n  getUrl = () => {\r\n    const url = window.location.search;\r\n\r\n    if (url) {\r\n      const urlParams = new URLSearchParams(url);\r\n      const urlLat = urlParams.get('lat');\r\n      const urlLng = urlParams.get('lng');\r\n      const urlName = urlParams.get('city');\r\n\r\n      this.getData(urlLat, urlLng, urlName);\r\n    } else {\r\n      this.setState({\r\n        currentTemp: null,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  addToFavorites = () => {\r\n    const { lat, lng, requestName, favorites } = this.state;\r\n\r\n    const data = {\r\n      id: Date.now(),\r\n      lat,\r\n      lng,\r\n      requestName,\r\n    };\r\n\r\n    const newFavorites = favorites;\r\n    const newFavoritesNames = [];\r\n\r\n    newFavorites.forEach(item => {\r\n      newFavoritesNames.push(item.requestName);\r\n    });\r\n\r\n    if (!this.checkFavorites(newFavoritesNames, data.requestName)) {\r\n      return;\r\n    }\r\n\r\n    newFavorites.unshift(data);\r\n\r\n    if (newFavorites.length > 5) {\r\n      newFavorites.length = 5;\r\n    }\r\n\r\n    const localData = JSON.stringify(newFavorites);\r\n\r\n    localStorage.setItem('localWeatherData', localData);\r\n\r\n    this.setState({\r\n      favorites: newFavorites,\r\n    });\r\n\r\n    this.favoritesTemp(newFavorites);\r\n  };\r\n\r\n  removeFromFavorites = e => {\r\n    const { favorites } = this.state;\r\n    const favoritesCopy = favorites.slice();\r\n    const favoritesId = [];\r\n\r\n    favoritesCopy.forEach(item => {\r\n      favoritesId.push(item.id);\r\n    });\r\n\r\n    const index = favoritesId.indexOf(e);\r\n\r\n    favoritesCopy.splice(index, 1);\r\n\r\n    this.setState({\r\n      favorites: favoritesCopy,\r\n    });\r\n\r\n    this.favoritesTemp(favoritesCopy);\r\n  };\r\n\r\n  checkFavorites = (arr, item) => arr.indexOf(item) === -1;\r\n\r\n  favoritesTemp = localData => {\r\n    const favArr = [];\r\n\r\n    localData.forEach((item, index) => {\r\n      favArr.push(\r\n        new Promise((resolve, reject) => {\r\n          fetch(`${DOMAIN_URL}/?lat=${item.lat}&lon=${item.lng}&key=${KEY}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              const favItem = {\r\n                index,\r\n                result,\r\n              };\r\n\r\n              resolve(favItem);\r\n            });\r\n        })\r\n      );\r\n    });\r\n\r\n    Promise.all(favArr).then(values => {\r\n      values.sort((a, b) => a.index - b.index);\r\n\r\n      this.setState({\r\n        favoritesWeather: values,\r\n      });\r\n    });\r\n  };\r\n\r\n  checkRequest = place => {\r\n    const { lat, lng } = this.state;\r\n\r\n    if (place.geometry) {\r\n      const latC = place.geometry.location.lat();\r\n      const lngC = place.geometry.location.lng();\r\n      const cityC = place.formatted_address;\r\n\r\n      this.setState({\r\n        searchValue: '',\r\n        lat: latC,\r\n        lng: lngC,\r\n      });\r\n\r\n      return this.getData(latC, lngC, cityC);\r\n    }\r\n    const city = place.name;\r\n\r\n    this.getData(lat, lng, city);\r\n  };\r\n\r\n  getCurrentDate = () => {\r\n    let day;\r\n    let month;\r\n    const date = new Date().getDate();\r\n\r\n    switch (new Date().getDay()) {\r\n      case 0:\r\n        day = 'Sunday';\r\n        break;\r\n      case 1:\r\n        day = 'Monday';\r\n        break;\r\n      case 2:\r\n        day = 'Tuesday';\r\n        break;\r\n      case 3:\r\n        day = 'Wednesday';\r\n        break;\r\n      case 4:\r\n        day = 'Thursday';\r\n        break;\r\n      case 5:\r\n        day = 'Friday';\r\n        break;\r\n      case 6:\r\n        day = 'Saturday';\r\n        break;\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n\r\n    switch (new Date().getMonth()) {\r\n      case 0:\r\n        month = 'January';\r\n        break;\r\n      case 1:\r\n        month = 'February';\r\n        break;\r\n      case 2:\r\n        month = 'March';\r\n        break;\r\n      case 3:\r\n        month = 'April';\r\n        break;\r\n      case 4:\r\n        month = 'May';\r\n        break;\r\n      case 5:\r\n        month = 'Jun';\r\n        break;\r\n      case 6:\r\n        month = 'July';\r\n        break;\r\n      case 7:\r\n        month = 'August';\r\n        break;\r\n      case 8:\r\n        month = 'September';\r\n        break;\r\n      case 9:\r\n        month = 'October';\r\n        break;\r\n      case 10:\r\n        month = 'November';\r\n        break;\r\n      case 11:\r\n        month = 'December';\r\n        break;\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n\r\n    return `${day} ${month}, ${date}`;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      requestName,\r\n      searchValue,\r\n      currentTemp,\r\n      error,\r\n      isLoading,\r\n      weekTemp,\r\n      favorites,\r\n      lat,\r\n      lng,\r\n      favoritesWeather,\r\n      wind,\r\n      weatherDescr,\r\n      wetness,\r\n    } = this.state;\r\n    return (\r\n      <div className={isLoading ? 'main-wrap loading' : 'main-wrap'}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form__input-wrap\">\r\n              <div>\r\n                <svg\r\n                  fill=\"white\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"28\"\r\n                  height=\"28\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path d=\"M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 14c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6z\" />\r\n                </svg>\r\n              </div>\r\n              <Autocomplete\r\n                className=\"text-style-2\"\r\n                value={searchValue}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Type a location ...\"\r\n                onPlaceSelected={place => {\r\n                  console.log(place);\r\n                  this.checkRequest(place);\r\n                }}\r\n                types={['(regions)']}\r\n              />\r\n              <button type=\"button\" onClick={this.handleClick} name=\"send\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"white\"\r\n                  width=\"28\"\r\n                  height=\"28\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path d=\"M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z\" />\r\n                </svg>{' '}\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <div className=\"current-info__wrap\">\r\n            {currentTemp ? (\r\n              <div className=\"current-info\">\r\n                <div className=\"current-info__title-wrap\">\r\n                  <h1 className=\"current-info__title text-style-3\">{requestName}</h1>\r\n                  <button\r\n                    className=\"current-info__favorite-btn\"\r\n                    onClick={this.addToFavorites}\r\n                    type=\"button\"\r\n                  >\r\n                    <svg\r\n                      fill=\"white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"28\"\r\n                      height=\"28\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path d=\"M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524-4.721 2.525.942-5.27-3.861-3.71 5.305-.733 2.335-4.817zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n                <p className=\"current-info__date\">{this.getCurrentDate()}</p>\r\n                <div className=\"current-info__info-wrap\">\r\n                  <div className=\"current-info__details\">\r\n                    <p>Wind {wind} ms</p>\r\n                    <p>Wetness {wetness}%</p>\r\n                  </div>\r\n                  <div className=\"current-info__icon-wrap\">\r\n                    <i>O</i>\r\n                    <p>{weatherDescr}</p>\r\n                  </div>\r\n                  <p className=\"current-info__temp\">{currentTemp}°</p>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {error ? <p style={{ fontSize: `${36}px`, color: 'brown' }}>{error}</p> : null}\r\n            {isLoading ? (\r\n              <div className=\"loader-wrap\">\r\n                <Loader />\r\n              </div>\r\n            ) : null}\r\n            {weekTemp ? <Week weekTemp={weekTemp} /> : null}\r\n          </div>\r\n        </div>\r\n        {favorites.length ? (\r\n          <FavoritesBar\r\n            removeFromFavorites={this.removeFromFavorites}\r\n            lat={lat}\r\n            lng={lng}\r\n            favorites={favorites}\r\n            getData={this.getData}\r\n            favoritesWeather={favoritesWeather}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets';\r\nimport './App.sass';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}