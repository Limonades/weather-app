{"version":3,"sources":["utils/Api.js","constants/ApiConstants.js","constants/Loader.js","components/Day/index.js","containers/App.js","serviceWorker.js","index.js","constants/loader.gif"],"names":["callApi","url","options","fetch","then","response","status","json","Error","statusText","DOMAIN_URL","KEY","Loader","react_default","a","createElement","style","width","concat","src","loaderImg","alt","Day","defineDay","ts","Date","getDay","console","log","_this2","this","weekTemp","props","marginBotoom","display","slice","map","day","index","marginRight","key","temp","React","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","handleClick","_this$state","state","lat","lng","searchValue","getData","handleChange","setState","target","value","city","currentTemp","error","isLoading","data","catch","err","message","requestName","city_name","_this$state2","onSubmit","react_google_autocomplete_default","onChange","onPlaceSelected","place","geometry","latC","viewport","l","j","lngC","cityC","formatted_address","name","types","type","onClick","fontSize","color","Loader_Loader","components_Day","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ae5242ce.chunk.js","sourcesContent":["export const callApi = (url, options) =>\r\n  fetch(url, options).then(response => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n","export const DOMAIN_URL = 'https://api.weatherbit.io/v2.0//forecast/daily';\nexport const KEY = '8fab1e8c72554b01807ac34da3e2cbfc';","import React from 'react';\r\nimport loaderImg from './loader.gif';\r\n\r\nexport const Loader = () => <img style={{ width: `${100}px` }} src={loaderImg} alt=\"loader\" />;\r\n","import React from 'react';\r\n\r\nclass Day extends React.Component {\r\n  defineDay = ts => {\r\n    // console.log(new Date(1000 * ts));\r\n    switch (new Date(1000 * ts).getDay()) {\r\n      case 0:\r\n        return 'Sunday';\r\n      case 1:\r\n        return 'Monday';\r\n      case 2:\r\n        return 'Tuesday';\r\n      case 3:\r\n        return 'Wednesday';\r\n      case 4:\r\n        return 'Thursday';\r\n      case 5:\r\n        return 'Friday';\r\n      case 6:\r\n        return 'Saturday';\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { weekTemp } = this.props;\r\n    return (\r\n      // TODO remove inline styles\r\n      <div>\r\n        <h5 style={{ marginBotoom: 0 }}>forecast for the week</h5>\r\n        <div style={{ display: `flex` }}>\r\n          {weekTemp.slice(1, 8).map((day, index) => (\r\n            <div style={{ marginRight: `36px` }} key={index}>\r\n              <p>{this.defineDay(day.ts)}</p>\r\n              <p>{day.temp}°</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Day;\r\n","import React from 'react';\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { callApi } from '../utils/Api';\r\nimport { DOMAIN_URL, KEY } from '../constants/ApiConstants';\r\nimport { Loader } from '../constants/Loader';\r\nimport Day from '../components/Day';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      requestName: '',\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      error: null,\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n    };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { lat, lng, searchValue } = this.state;\r\n    this.getData(lat, lng, searchValue);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      searchValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  getData = (lat, lng, city) => {\r\n    if (!lat && !lng && city === '') {\r\n      return this.setState({\r\n        searchValue: '',\r\n        currentTemp: null,\r\n        error: 'Не в этот раз, петушок)',\r\n        isLoading: false,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      error: null,\r\n      isLoading: true,\r\n      weekTemp: null,\r\n    });\r\n\r\n    if (!lat && !lng && city !== '') {\r\n      return callApi(`${DOMAIN_URL}/forecast/daily?city=${city}&key=${KEY}`)\r\n        .then(response => {\r\n          this.setState({\r\n            requestName: response.city_name,\r\n            currentTemp: response.data[0].temp,\r\n            error: null,\r\n            isLoading: false,\r\n            weekTemp: response.data,\r\n          });\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            error: err.message,\r\n            currentTemp: null,\r\n            isLoading: false,\r\n          });\r\n        });\r\n    }\r\n\r\n    callApi(`${DOMAIN_URL}/?lat=${lat}&lon=${lng}&key=${KEY}`)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTemp: response.data[0].temp,\r\n          error: null,\r\n          isLoading: false,\r\n          weekTemp: response.data,\r\n          lng: null,\r\n          lat: null,\r\n        });\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message,\r\n          currentTemp: null,\r\n          isLoading: false,\r\n          lng: null,\r\n          lat: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      requestName,\r\n      searchValue,\r\n      currentTemp,\r\n      error,\r\n      isLoading,\r\n      weekTemp,\r\n      lat,\r\n      lng,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Autocomplete\r\n            value={searchValue}\r\n            onChange={this.handleChange}\r\n            style={{ width: '50%' }}\r\n            onPlaceSelected={place => {\r\n              if (place.geometry) {\r\n                const latC = place.geometry.viewport.l.j;\r\n                const lngC = place.geometry.viewport.l.l;\r\n                const cityC = place.formatted_address;\r\n\r\n                this.setState({\r\n                  requestName: cityC,\r\n                  searchValue: '',\r\n                  lat: latC,\r\n                  lng: lngC,\r\n                });\r\n\r\n                return this.getData(latC, lngC, cityC);\r\n              }\r\n              const city = place.name;\r\n\r\n              this.getData(lat, lng, city);\r\n            }}\r\n            types={['(regions)']}\r\n          />\r\n          <button type=\"button\" onClick={this.handleClick} name=\"send\">\r\n            search\r\n          </button>\r\n        </form>\r\n\r\n        {currentTemp ? (\r\n          <div>\r\n            <h1>{requestName}</h1>\r\n            <p style={{ fontSize: `${36}px` }}>Now {currentTemp}° градусиков</p>\r\n          </div>\r\n        ) : null}\r\n        {error ? <p style={{ fontSize: `${36}px`, color: 'brown' }}>{error}</p> : null}\r\n        {isLoading ? <Loader /> : null}\r\n        {weekTemp ? <Day weekTemp={weekTemp} /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.0315fe01.gif\";"],"sourceRoot":""}