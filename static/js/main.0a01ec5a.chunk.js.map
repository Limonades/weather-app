{"version":3,"sources":["utils/Api.js","constants/ApiConstants.js","components/Loader/index.js","components/Week/index.js","components/FavoritesItem/index.js","components/FavoritesBar/index.js","containers/App.js","serviceWorker.js","index.js","assets/img/loader.gif"],"names":["callApi","url","options","fetch","then","response","status","json","Error","statusText","DOMAIN_URL","KEY","Loader","react_default","a","createElement","style","width","concat","src","loaderImg","alt","Week","defineDay","ts","Date","getDay","console","log","_this2","this","weekTemp","props","className","slice","map","day","index","key","temp","React","Component","FavoritesItem","handleClick","_this$props","_this","id","removeFromFavorites","handleSearch","e","preventDefault","_this$props2","lat","lng","name","getData","_this$props3","onClick","href","type","defaultProps","FavoritesBar","favorites","town","components_FavoritesItem","requestName","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","_this$state","state","searchValue","setState","currentTemp","error","isLoading","handleChange","_this$state2","target","value","city","data","changeHash","catch","err","message","city_name","lon","popstateEvent","window","history","pushState","getUrl","location","search","urlParams","URLSearchParams","urlLat","get","urlLng","urlName","addToFavorites","_this$state3","now","newFavorites","newFavoritesNames","forEach","item","push","checkFavorites","unshift","localData","JSON","stringify","localStorage","setItem","favoritesCopy","favoritesId","indexOf","splice","arr","checkRequest","place","_this$state4","geometry","latC","viewport","la","j","lngC","l","cityC","formatted_address","parse","getItem","addEventListener","localFavorites","stateFavorites","length","_this3","_this$state5","onSubmit","react_google_autocomplete_default","onChange","onPlaceSelected","types","fontSize","color","Loader_Loader","src_components_Week","components_FavoritesBar","Boolean","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0a01ec5a.chunk.js","sourcesContent":["export const callApi = (url, options) =>\r\n  fetch(url, options).then(response => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n","export const DOMAIN_URL = 'https://api.weatherbit.io/v2.0//forecast/daily';\nexport const KEY = '8fab1e8c72554b01807ac34da3e2cbfc';","import React from 'react';\r\nimport loaderImg from '../../assets/img/loader.gif';\r\n\r\nexport const Loader = () => <img style={{ width: `${100}px` }} src={loaderImg} alt=\"loader\" />;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.sass';\r\n\r\nclass Week extends React.Component {\r\n  defineDay = ts => {\r\n    // console.log(new Date(1000 * ts));\r\n    switch (new Date(1000 * ts).getDay()) {\r\n      case 0:\r\n        return 'Sunday';\r\n      case 1:\r\n        return 'Monday';\r\n      case 2:\r\n        return 'Tuesday';\r\n      case 3:\r\n        return 'Wednesday';\r\n      case 4:\r\n        return 'Thursday';\r\n      case 5:\r\n        return 'Friday';\r\n      case 6:\r\n        return 'Saturday';\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { weekTemp } = this.props;\r\n    return (\r\n      <div>\r\n        <h5 className=\"week__title\">forecast for the week</h5>\r\n        <div className=\"week__day-wrap\">\r\n          {weekTemp.slice(1, 8).map((day, index) => (\r\n            <div className=\"week__day\" key={index}>\r\n              <p>{this.defineDay(day.ts)}</p>\r\n              <p>{day.temp}°</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWeek.propTypes = {\r\n  weekTemp: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FavoritesItem extends React.Component {\r\n  handleClick = () => {\r\n    const { id, removeFromFavorites } = this.props;\r\n\r\n    removeFromFavorites(id);\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    const { lat, lng, name, getData } = this.props;\r\n    getData(lat, lng, name);\r\n  };\r\n\r\n  render() {\r\n    const { name, id } = this.props;\r\n    return (\r\n      <li>\r\n        <a onClick={this.handleSearch} href=\"/\">\r\n          {name}\r\n        </a>\r\n        {console.log(id)}\r\n        <button onClick={this.handleClick} type=\"button\">\r\n          X\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  removeFromFavorites: PropTypes.func.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n  lat: PropTypes.number,\r\n  lng: PropTypes.number,\r\n};\r\n\r\nFavoritesItem.defaultProps = {\r\n  lat: null,\r\n  lng: null,\r\n};\r\n\r\nexport default FavoritesItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavoritesItem from '../FavoritesItem';\r\n\r\nclass FavoritesBar extends React.Component {\r\n  render() {\r\n    const { favorites, removeFromFavorites, getData } = this.props;\r\n    return (\r\n      <div>\r\n        <h2>Favorites</h2>\r\n        <ul>\r\n          {favorites.map(town => (\r\n            <FavoritesItem\r\n              removeFromFavorites={removeFromFavorites}\r\n              getData={getData}\r\n              key={town.id}\r\n              id={town.id}\r\n              name={town.requestName}\r\n              lat={town.lat}\r\n              lng={town.lng}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesBar.propTypes = {\r\n  favorites: PropTypes.array.isRequired,\r\n  removeFromFavorites: PropTypes.func.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FavoritesBar;\r\n","import React from 'react';\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { callApi } from '../utils/Api';\r\nimport { DOMAIN_URL, KEY } from '../constants/ApiConstants';\r\nimport { Loader } from '../components/Loader';\r\nimport Week from '../components/Week';\r\nimport FavoritesBar from '../components/FavoritesBar';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      requestName: '',\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      error: null,\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n      favorites: [],\r\n      popstateEvent: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const localData = JSON.parse(localStorage.getItem('localWeatherData'));\r\n\r\n    this.getUrl();\r\n\r\n    window.addEventListener('popstate', () => {\r\n      this.setState({\r\n        popstateEvent: true,\r\n      });\r\n\r\n      this.getUrl();\r\n    });\r\n\r\n    if (localData) {\r\n      this.setState({ favorites: localData });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { favorites } = this.state;\r\n\r\n    const localFavorites = JSON.parse(localStorage.getItem('localWeatherData'));\r\n    const stateFavorites = JSON.stringify(favorites);\r\n\r\n    if (!localFavorites) {\r\n      return false;\r\n    }\r\n\r\n    if (favorites.length !== localFavorites.length) {\r\n      localStorage.setItem('localWeatherData', stateFavorites);\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { lat, lng, searchValue } = this.state;\r\n\r\n    if (searchValue !== '') {\r\n      return this.getData(lat, lng, searchValue);\r\n    }\r\n\r\n    this.setState({\r\n      currentTemp: null,\r\n      error: 'Не в этот раз, петушок)',\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { lat, lng, requestName } = this.state;\r\n\r\n    this.setState({\r\n      searchValue: e.target.value,\r\n    });\r\n\r\n    if (lat && lng) {\r\n      this.setState({\r\n        lat: null,\r\n        lng: null,\r\n      });\r\n    }\r\n\r\n    if (requestName) {\r\n      this.setState({\r\n        requestName: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  getData = (lat, lng, city) => {\r\n    if (!lat && !lng && city === '') {\r\n      return this.setState({\r\n        searchValue: '',\r\n        currentTemp: null,\r\n        error: 'Не в этот раз, петушок)',\r\n        isLoading: false,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      error: null,\r\n      isLoading: true,\r\n      weekTemp: null,\r\n    });\r\n\r\n    if (!lat && !lng && city !== '') {\r\n      return callApi(`${DOMAIN_URL}/forecast/daily?city=${city}&key=${KEY}`)\r\n        .then(response => {\r\n          this.setState({\r\n            requestName: response.city_name,\r\n            currentTemp: response.data[0].temp,\r\n            error: null,\r\n            isLoading: false,\r\n            weekTemp: response.data,\r\n          });\r\n          console.log(response);\r\n          this.changeHash(response.lat, response.lon, response.city_name);\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            error: err.message,\r\n            currentTemp: null,\r\n            isLoading: false,\r\n          });\r\n        });\r\n    }\r\n\r\n    callApi(`${DOMAIN_URL}/?lat=${lat}&lon=${lng}&key=${KEY}`)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTemp: response.data[0].temp,\r\n          error: null,\r\n          isLoading: false,\r\n          weekTemp: response.data,\r\n          requestName: `${city}`,\r\n        });\r\n        this.changeHash(lat, lng, city);\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message,\r\n          currentTemp: null,\r\n          isLoading: false,\r\n          lng: null,\r\n          lat: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  changeHash = (lat, lng, city) => {\r\n    const { popstateEvent } = this.state;\r\n\r\n    if (popstateEvent) {\r\n      return this.setState({\r\n        popstateEvent: false,\r\n      });\r\n    }\r\n\r\n    const state = {\r\n      lat,\r\n      lng,\r\n      city,\r\n    };\r\n\r\n    const title = '';\r\n    const url = `?lat=${lat}&lng=${lng}&city=${city}`;\r\n\r\n    window.history.pushState(state, title, url);\r\n  };\r\n\r\n  getUrl = () => {\r\n    const url = window.location.search;\r\n\r\n    if (url) {\r\n      const urlParams = new URLSearchParams(url);\r\n      const urlLat = urlParams.get('lat');\r\n      const urlLng = urlParams.get('lng');\r\n      const urlName = urlParams.get('city');\r\n\r\n      this.getData(urlLat, urlLng, urlName);\r\n    } else {\r\n      this.setState({\r\n        currentTemp: null,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  addToFavorites = () => {\r\n    const { lat, lng, requestName, favorites } = this.state;\r\n\r\n    const data = {\r\n      id: Date.now(),\r\n      lat,\r\n      lng,\r\n      requestName,\r\n    };\r\n\r\n    const newFavorites = favorites;\r\n    const newFavoritesNames = [];\r\n\r\n    newFavorites.forEach(item => {\r\n      newFavoritesNames.push(item.requestName);\r\n    });\r\n\r\n    if (!this.checkFavorites(newFavoritesNames, data.requestName)) {\r\n      return;\r\n    }\r\n\r\n    newFavorites.unshift(data);\r\n\r\n    const localData = JSON.stringify(newFavorites);\r\n\r\n    localStorage.setItem('localWeatherData', localData);\r\n\r\n    this.setState({\r\n      favorites: newFavorites,\r\n    });\r\n  };\r\n\r\n  removeFromFavorites = e => {\r\n    const { favorites } = this.state;\r\n    const favoritesCopy = favorites.slice();\r\n    const favoritesId = [];\r\n\r\n    favoritesCopy.forEach(item => {\r\n      favoritesId.push(item.id);\r\n    });\r\n\r\n    const index = favoritesId.indexOf(e);\r\n\r\n    favoritesCopy.splice(index, 1);\r\n\r\n    this.setState({\r\n      favorites: favoritesCopy,\r\n    });\r\n  };\r\n\r\n  checkFavorites = (arr, item) => arr.indexOf(item) === -1;\r\n\r\n  checkRequest = place => {\r\n    const { lat, lng } = this.state;\r\n\r\n    if (place.geometry) {\r\n      const latC = place.geometry.viewport.la.j;\r\n      const lngC = place.geometry.viewport.la.l;\r\n      const cityC = place.formatted_address;\r\n\r\n      this.setState({\r\n        searchValue: '',\r\n        lat: latC,\r\n        lng: lngC,\r\n      });\r\n\r\n      return this.getData(latC, lngC, cityC);\r\n    }\r\n    const city = place.name;\r\n\r\n    this.getData(lat, lng, city);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      requestName,\r\n      searchValue,\r\n      currentTemp,\r\n      error,\r\n      isLoading,\r\n      weekTemp,\r\n      favorites,\r\n      lat,\r\n      lng,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Autocomplete\r\n            value={searchValue}\r\n            onChange={this.handleChange}\r\n            style={{ width: '50%' }}\r\n            onPlaceSelected={place => {\r\n              console.log(place);\r\n              this.checkRequest(place);\r\n            }}\r\n            types={['(regions)']}\r\n          />\r\n          <button type=\"button\" onClick={this.handleClick} name=\"send\">\r\n            search\r\n          </button>\r\n        </form>\r\n        {currentTemp ? (\r\n          <div>\r\n            <h1>{requestName}</h1>\r\n            <button onClick={this.addToFavorites} type=\"button\">\r\n              Добавить в Избранное\r\n            </button>\r\n            <p style={{ fontSize: `${36}px` }}>Now {currentTemp}° градусиков</p>\r\n          </div>\r\n        ) : null}\r\n        {error ? <p style={{ fontSize: `${36}px`, color: 'brown' }}>{error}</p> : null}\r\n        {isLoading ? <Loader /> : null}\r\n        {weekTemp ? <Week weekTemp={weekTemp} /> : null}\r\n        {favorites.length ? (\r\n          <FavoritesBar\r\n            removeFromFavorites={this.removeFromFavorites}\r\n            lat={lat}\r\n            lng={lng}\r\n            favorites={favorites}\r\n            getData={this.getData}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.sass';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.0315fe01.gif\";"],"sourceRoot":""}