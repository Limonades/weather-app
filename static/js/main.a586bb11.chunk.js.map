{"version":3,"sources":["assets/img/loader.gif","utils/Api.js","constants/ApiConstants.js","components/Loader/index.js","utils/Icons.js","components/Week/index.js","components/FavoritesItem/index.js","components/FavoritesBar/index.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","callApi","url","options","fetch","then","response","status","json","Error","statusText","DOMAIN_URL","KEY","Loader","react_default","a","createElement","style","width","concat","src","loaderImg","alt","convertIcon","dataIcon","icon","getIcon","x","Week","defineDay","ts","Date","getDay","console","log","_this2","this","weekTemp","props","className","slice","map","day","index","key","weather","temp","React","Component","FavoritesItem","handleClick","_this$props","_this","id","removeFromFavorites","handleSearch","e","preventDefault","_this$props2","lat","lng","name","getData","_this$props3","favoritesWeather","onClick","href","result","data","type","height","xmlns","fillRule","clipRule","fill","d","defaultProps","FavoritesBar","favorites","viewBox","town","i","components_FavoritesItem","requestName","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","_this$state","state","searchValue","setState","currentTemp","error","isLoading","handleChange","_this$state2","target","value","city","wind","wind_spd","weatherDescr","description","wetness","rh","currentWeatherIcon","changeHash","catch","err","message","city_name","weekIcons","lon","popstateEvent","window","history","pushState","getUrl","location","search","urlParams","URLSearchParams","urlLat","get","urlLng","urlName","addToFavorites","_this$state3","now","newFavorites","newFavoritesNames","forEach","item","push","checkFavorites","unshift","length","localData","JSON","stringify","localStorage","setItem","favoritesTemp","favoritesCopy","favoritesId","indexOf","splice","arr","favArr","Promise","resolve","reject","res","all","values","sort","b","checkRequest","place","_this$state4","geometry","latC","lngC","cityC","formatted_address","getCurrentDate","month","date","getDate","getMonth","parse","getItem","addEventListener","localFavorites","stateFavorites","_this3","_this$state5","onSubmit","react_google_autocomplete_default","onChange","placeholder","onPlaceSelected","types","Loader_Loader","src_components_Week","src_components_FavoritesBar","Boolean","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a586bb11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.0315fe01.gif\";","export const callApi = (url, options) =>\r\n  fetch(url, options).then(response => {\r\n    if (response.status === 200) {\r\n      return response.json();\r\n    }\r\n    throw new Error(response.statusText);\r\n  });\r\n","export const DOMAIN_URL = 'https://api.weatherbit.io/v2.0//forecast/daily';\r\nexport const KEY = '8fab1e8c72554b01807ac34da3e2cbfc';\r\n","import React from 'react';\r\nimport loaderImg from '../../assets/img/loader.gif';\r\n\r\nexport const Loader = () => <img style={{ width: `${100}px` }} src={loaderImg} alt=\"loader\" />;\r\n","export const convertIcon = dataIcon => {\r\n  let icon;\r\n  const getIcon = x => `icon wi ${x}`;\r\n\r\n  switch (dataIcon) {\r\n    case 't01d':\r\n    case 't02d':\r\n    case 't03d':\r\n      icon = getIcon('wi-day-thunderstorm');\r\n      break;\r\n\r\n    case 't01n':\r\n    case 't02n':\r\n    case 't03n':\r\n      icon = getIcon('wi-night-alt-thunderstorm');\r\n      break;\r\n\r\n    case 't04d':\r\n    case 't05d':\r\n      icon = getIcon('wi-day-lightning');\r\n      break;\r\n\r\n    case 't04n':\r\n    case 't05n':\r\n      icon = getIcon('wi-night-lightning');\r\n      break;\r\n\r\n    case 'd01d':\r\n    case 'd02d':\r\n    case 'd03d':\r\n      icon = getIcon('wi-day-sleet');\r\n      break;\r\n\r\n    case 'd01n':\r\n    case 'd02n':\r\n    case 'd03n':\r\n      icon = getIcon('wi-night-alt-sleet');\r\n      break;\r\n\r\n    case 'r01d':\r\n    case 'r02d':\r\n    case 'r01n':\r\n    case 'r02n':\r\n    case 'f01d':\r\n    case 'f01n':\r\n    case 'r04d':\r\n    case 'r06d':\r\n    case 'u00d':\r\n    case 'u00n':\r\n      icon = getIcon('wi-rain');\r\n      break;\r\n\r\n    case 'r03d':\r\n    case 'r03n':\r\n      icon = getIcon('wi-day-rain-wind');\r\n      break;\r\n\r\n    case 'r05d':\r\n      icon = getIcon('wi-day-showers');\r\n      break;\r\n\r\n    case 'r05n':\r\n    case 'r06n':\r\n      icon = getIcon('wi-night-alt-showers');\r\n      break;\r\n\r\n    case 's01d':\r\n    case 's04d':\r\n      icon = getIcon('wi-day-snow');\r\n      break;\r\n\r\n    case 's01n':\r\n    case 's04n':\r\n      icon = getIcon('wi-night-alt-snow');\r\n      break;\r\n\r\n    case 's02d':\r\n    case 's02n':\r\n    case 's03d':\r\n    case 's03n':\r\n      icon = getIcon('wi-snow-wind');\r\n      break;\r\n\r\n    case 's05d':\r\n    case 's05n':\r\n      icon = getIcon('wi-cloudy-gusts');\r\n      break;\r\n\r\n    case 's06d':\r\n    case 's06n':\r\n      icon = getIcon('wi-snow');\r\n      break;\r\n\r\n    case 'a01d':\r\n    case 'a02d':\r\n    case 'a03d':\r\n    case 'a04d':\r\n    case 'a05d':\r\n    case 'a06d':\r\n      icon = getIcon('wi-day-fog');\r\n      break;\r\n\r\n    case 'a01n':\r\n    case 'a02n':\r\n    case 'a03n':\r\n    case 'a04n':\r\n    case 'a05n':\r\n    case 'a06n':\r\n      icon = getIcon('wi-night-fog');\r\n      break;\r\n\r\n    case 'c01d':\r\n      icon = getIcon('wi-day-sunny');\r\n      break;\r\n\r\n    case 'c01n':\r\n      icon = getIcon('wi-night-clear');\r\n      break;\r\n\r\n    case 'c02d':\r\n    case 'c03d':\r\n      icon = getIcon('wi-day-cloudy');\r\n      break;\r\n\r\n    case 'c02n':\r\n    case 'c03n':\r\n      icon = getIcon('wi-night-alt-cloudy');\r\n      break;\r\n\r\n    case 'c04d':\r\n      icon = getIcon('wi-day-cloudy-high');\r\n      break;\r\n\r\n    case 'c04n':\r\n      icon = getIcon('wi-night-alt-cloudy-high');\r\n      break;\r\n    default:\r\n      icon = 'N/A';\r\n      break;\r\n  }\r\n\r\n  return icon;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './index.sass';\r\nimport { convertIcon } from '../../utils/Icons';\r\n\r\nclass Week extends React.Component {\r\n  defineDay = ts => {\r\n    // console.log(new Date(1000 * ts));\r\n    switch (new Date(1000 * ts).getDay()) {\r\n      case 0:\r\n        return 'S';\r\n      case 1:\r\n        return 'M';\r\n      case 2:\r\n        return 'T';\r\n      case 3:\r\n        return 'W';\r\n      case 4:\r\n        return 'T';\r\n      case 5:\r\n        return 'F';\r\n      case 6:\r\n        return 'S';\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { weekTemp } = this.props;\r\n    return (\r\n      <div className=\"week__week\">\r\n        <div className=\"week__day-wrap\">\r\n          {weekTemp.slice(1, 8).map((day, index) => (\r\n            <div className=\"week__day\" key={index}>\r\n              <p>{this.defineDay(day.ts)}</p>\r\n              <i className={convertIcon(day.weather.icon)} />\r\n              <p>{day.temp}°</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nWeek.propTypes = {\r\n  weekTemp: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Week;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FavoritesItem extends React.Component {\r\n  handleClick = () => {\r\n    const { id, removeFromFavorites } = this.props;\r\n\r\n    removeFromFavorites(id);\r\n  };\r\n\r\n  handleSearch = e => {\r\n    e.preventDefault();\r\n    const { lat, lng, name, getData } = this.props;\r\n    getData(lat, lng, name);\r\n  };\r\n\r\n  render() {\r\n    const { name, favoritesWeather } = this.props;\r\n    console.log(favoritesWeather);\r\n    return (\r\n      <li className=\"favorites__list-item\">\r\n        <a className=\"favorites__list-btn text-style-2\" onClick={this.handleSearch} href=\"/\">\r\n          <p>{name}</p>\r\n\r\n          {favoritesWeather ? <span>{favoritesWeather.result.data[0].temp}°</span> : null}\r\n          <button className=\"favorites__list-remove-btn\" onClick={this.handleClick} type=\"button\">\r\n            <svg\r\n              width=\"24\"\r\n              height=\"24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fillRule=\"evenodd\"\r\n              clipRule=\"evenodd\"\r\n              fill=\"white\"\r\n            >\r\n              <path d=\"M19 24h-14c-1.104 0-2-.896-2-2v-16h18v16c0 1.104-.896 2-2 2m-9-14c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6 0c0-.552-.448-1-1-1s-1 .448-1 1v9c0 .552.448 1 1 1s1-.448 1-1v-9zm6-5h-20v-2h6v-1.5c0-.827.673-1.5 1.5-1.5h5c.825 0 1.5.671 1.5 1.5v1.5h6v2zm-12-2h4v-1h-4v1z\" />\r\n            </svg>\r\n          </button>\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n  removeFromFavorites: PropTypes.func.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n  lat: PropTypes.number,\r\n  lng: PropTypes.number,\r\n};\r\n\r\nFavoritesItem.defaultProps = {\r\n  lat: null,\r\n  lng: null,\r\n};\r\n\r\nexport default FavoritesItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FavoritesItem from '../FavoritesItem';\r\nimport './index.sass';\r\n\r\nclass FavoritesBar extends React.Component {\r\n  render() {\r\n    const { favorites, removeFromFavorites, getData, favoritesWeather } = this.props;\r\n    console.log(favoritesWeather);\r\n    return (\r\n      <div className=\"favorites\">\r\n        <h2 className=\"text-style-2\">\r\n          <svg\r\n            fill=\"white\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path d=\"M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524-4.721 2.525.942-5.27-3.861-3.71 5.305-.733 2.335-4.817zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z\" />\r\n          </svg>\r\n          Favorites\r\n        </h2>\r\n        <ul className=\"favorites__list\">\r\n          {favorites.map((town, i) => (\r\n            <FavoritesItem\r\n              removeFromFavorites={removeFromFavorites}\r\n              favoritesWeather={favoritesWeather[i]}\r\n              getData={getData}\r\n              key={town.id}\r\n              id={town.id}\r\n              name={town.requestName}\r\n              lat={town.lat}\r\n              lng={town.lng}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFavoritesBar.propTypes = {\r\n  favorites: PropTypes.array.isRequired,\r\n  removeFromFavorites: PropTypes.func.isRequired,\r\n  getData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FavoritesBar;\r\n","import React from 'react';\r\nimport './index.sass';\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { callApi } from '../utils/Api';\r\nimport { DOMAIN_URL, KEY } from '../constants/ApiConstants';\r\nimport { Loader } from '../components/Loader';\r\nimport Week from '../components/Week';\r\nimport FavoritesBar from '../components/FavoritesBar';\r\nimport { convertIcon } from '../utils/Icons';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      requestName: '',\r\n      searchValue: '',\r\n      currentTemp: null,\r\n      wind: null,\r\n      weatherDescr: null,\r\n      wetness: null,\r\n      error: null,\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n      favorites: [],\r\n      popstateEvent: false,\r\n      favoritesWeather: [],\r\n      currentWeatherIcon: null,\r\n      weekIcons: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const localData = JSON.parse(localStorage.getItem('localWeatherData'));\r\n\r\n    this.getUrl();\r\n\r\n    window.addEventListener('popstate', () => {\r\n      this.setState({\r\n        popstateEvent: true,\r\n      });\r\n\r\n      this.getUrl();\r\n    });\r\n\r\n    if (localData) {\r\n      this.setState({ favorites: localData });\r\n      this.favoritesTemp(localData);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { favorites } = this.state;\r\n\r\n    const localFavorites = JSON.parse(localStorage.getItem('localWeatherData'));\r\n    const stateFavorites = JSON.stringify(favorites);\r\n\r\n    if (!localFavorites) {\r\n      return;\r\n    }\r\n\r\n    if (favorites.length !== localFavorites.length) {\r\n      localStorage.setItem('localWeatherData', stateFavorites);\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { lat, lng, searchValue } = this.state;\r\n\r\n    if (searchValue !== '') {\r\n      return this.getData(lat, lng, searchValue);\r\n    }\r\n\r\n    this.setState({\r\n      currentTemp: null,\r\n      error: 'Не в этот раз, петушок)',\r\n      isLoading: false,\r\n      weekTemp: null,\r\n      lat: null,\r\n      lng: null,\r\n    });\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { lat, lng, requestName } = this.state;\r\n\r\n    this.setState({\r\n      searchValue: e.target.value,\r\n    });\r\n\r\n    if (lat && lng) {\r\n      this.setState({\r\n        lat: null,\r\n        lng: null,\r\n      });\r\n    }\r\n\r\n    // if (requestName) {\r\n    //   this.setState({\r\n    //     requestName: '',\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  getData = (lat, lng, city) => {\r\n    if (!lat && !lng && city === '') {\r\n      return this.setState({\r\n        searchValue: '',\r\n        currentTemp: null,\r\n        error: 'Не в этот раз, петушок)',\r\n        isLoading: false,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      searchValue: '',\r\n      // currentTemp: null,\r\n      // error: null,\r\n      isLoading: true,\r\n      // currentWeatherIcon: null,\r\n      // weekTemp: null,\r\n      // weekIcons: null,\r\n    });\r\n\r\n    if (!lat && !lng && city !== '') {\r\n      return callApi(`${DOMAIN_URL}/forecast/daily?city=${city}&key=${KEY}`)\r\n        .then(response => {\r\n          console.log(response);\r\n          this.setState({\r\n            requestName: response.city_name,\r\n            currentTemp: response.data[0].temp,\r\n            error: null,\r\n            isLoading: false,\r\n            weekTemp: response.data,\r\n            currentWeatherIcon: response.data[0].weather.icon,\r\n            weekIcons: response.data,\r\n          });\r\n          this.changeHash(response.lat, response.lon, response.city_name);\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            error: err.message,\r\n            currentTemp: null,\r\n            isLoading: false,\r\n            lng: null,\r\n            lat: null,\r\n            weekTemp: null,\r\n          });\r\n        });\r\n    }\r\n\r\n    callApi(`${DOMAIN_URL}/?lat=${lat}&lon=${lng}&key=${KEY}`)\r\n      .then(response => {\r\n        console.log(response);\r\n        this.setState({\r\n          currentTemp: response.data[0].temp,\r\n          wind: response.data[0].wind_spd,\r\n          weatherDescr: response.data[0].weather.description,\r\n          wetness: response.data[0].rh,\r\n          error: null,\r\n          isLoading: false,\r\n          weekTemp: response.data,\r\n          requestName: `${city}`,\r\n          currentWeatherIcon: response.data[0].weather.icon,\r\n        });\r\n        this.changeHash(lat, lng, city);\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err.message,\r\n          currentTemp: null,\r\n          isLoading: false,\r\n          lng: null,\r\n          lat: null,\r\n          weekTemp: null,\r\n        });\r\n      });\r\n  };\r\n\r\n  changeHash = (lat, lng, city) => {\r\n    const { popstateEvent } = this.state;\r\n\r\n    if (popstateEvent) {\r\n      return this.setState({\r\n        popstateEvent: false,\r\n      });\r\n    }\r\n\r\n    const state = {\r\n      lat,\r\n      lng,\r\n      city,\r\n    };\r\n\r\n    const title = '';\r\n    const url = `?lat=${lat}&lng=${lng}&city=${city}`;\r\n\r\n    window.history.pushState(state, title, url);\r\n  };\r\n\r\n  getUrl = () => {\r\n    const url = window.location.search;\r\n\r\n    if (url) {\r\n      const urlParams = new URLSearchParams(url);\r\n      const urlLat = urlParams.get('lat');\r\n      const urlLng = urlParams.get('lng');\r\n      const urlName = urlParams.get('city');\r\n\r\n      this.getData(urlLat, urlLng, urlName);\r\n    } else {\r\n      this.setState({\r\n        currentTemp: null,\r\n        weekTemp: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  addToFavorites = () => {\r\n    const { lat, lng, requestName, favorites } = this.state;\r\n\r\n    const data = {\r\n      id: Date.now(),\r\n      lat,\r\n      lng,\r\n      requestName,\r\n    };\r\n\r\n    const newFavorites = favorites;\r\n    const newFavoritesNames = [];\r\n\r\n    newFavorites.forEach(item => {\r\n      newFavoritesNames.push(item.requestName);\r\n    });\r\n\r\n    if (!this.checkFavorites(newFavoritesNames, data.requestName)) {\r\n      return;\r\n    }\r\n\r\n    newFavorites.unshift(data);\r\n\r\n    if (newFavorites.length > 5) {\r\n      newFavorites.length = 5;\r\n    }\r\n\r\n    const localData = JSON.stringify(newFavorites);\r\n\r\n    localStorage.setItem('localWeatherData', localData);\r\n\r\n    this.setState({\r\n      favorites: newFavorites,\r\n    });\r\n\r\n    this.favoritesTemp(newFavorites);\r\n  };\r\n\r\n  removeFromFavorites = e => {\r\n    const { favorites } = this.state;\r\n    const favoritesCopy = favorites.slice();\r\n    const favoritesId = [];\r\n\r\n    favoritesCopy.forEach(item => {\r\n      favoritesId.push(item.id);\r\n    });\r\n\r\n    const index = favoritesId.indexOf(e);\r\n\r\n    favoritesCopy.splice(index, 1);\r\n\r\n    this.setState({\r\n      favorites: favoritesCopy,\r\n    });\r\n\r\n    this.favoritesTemp(favoritesCopy);\r\n  };\r\n\r\n  checkFavorites = (arr, item) => arr.indexOf(item) === -1;\r\n\r\n  favoritesTemp = localData => {\r\n    const favArr = [];\r\n\r\n    localData.forEach((item, index) => {\r\n      favArr.push(\r\n        new Promise((resolve, reject) => {\r\n          fetch(`${DOMAIN_URL}/?lat=${item.lat}&lon=${item.lng}&key=${KEY}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              const favItem = {\r\n                index,\r\n                result,\r\n              };\r\n\r\n              resolve(favItem);\r\n            });\r\n        })\r\n      );\r\n    });\r\n\r\n    Promise.all(favArr).then(values => {\r\n      values.sort((a, b) => a.index - b.index);\r\n\r\n      this.setState({\r\n        favoritesWeather: values,\r\n      });\r\n    });\r\n  };\r\n\r\n  checkRequest = place => {\r\n    const { lat, lng } = this.state;\r\n\r\n    if (place.geometry) {\r\n      const latC = place.geometry.location.lat();\r\n      const lngC = place.geometry.location.lng();\r\n      const cityC = place.formatted_address;\r\n\r\n      this.setState({\r\n        searchValue: '',\r\n        lat: latC,\r\n        lng: lngC,\r\n      });\r\n\r\n      return this.getData(latC, lngC, cityC);\r\n    }\r\n    const city = place.name;\r\n\r\n    this.getData(lat, lng, city);\r\n  };\r\n\r\n  getCurrentDate = () => {\r\n    let day;\r\n    let month;\r\n    const date = new Date().getDate();\r\n\r\n    switch (new Date().getDay()) {\r\n      case 0:\r\n        day = 'Sunday';\r\n        break;\r\n      case 1:\r\n        day = 'Monday';\r\n        break;\r\n      case 2:\r\n        day = 'Tuesday';\r\n        break;\r\n      case 3:\r\n        day = 'Wednesday';\r\n        break;\r\n      case 4:\r\n        day = 'Thursday';\r\n        break;\r\n      case 5:\r\n        day = 'Friday';\r\n        break;\r\n      case 6:\r\n        day = 'Saturday';\r\n        break;\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n\r\n    switch (new Date().getMonth()) {\r\n      case 0:\r\n        month = 'January';\r\n        break;\r\n      case 1:\r\n        month = 'February';\r\n        break;\r\n      case 2:\r\n        month = 'March';\r\n        break;\r\n      case 3:\r\n        month = 'April';\r\n        break;\r\n      case 4:\r\n        month = 'May';\r\n        break;\r\n      case 5:\r\n        month = 'Jun';\r\n        break;\r\n      case 6:\r\n        month = 'July';\r\n        break;\r\n      case 7:\r\n        month = 'August';\r\n        break;\r\n      case 8:\r\n        month = 'September';\r\n        break;\r\n      case 9:\r\n        month = 'October';\r\n        break;\r\n      case 10:\r\n        month = 'November';\r\n        break;\r\n      case 11:\r\n        month = 'December';\r\n        break;\r\n      default:\r\n        console.log('error');\r\n        break;\r\n    }\r\n\r\n    return `${day} ${month}, ${date}`;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      requestName,\r\n      searchValue,\r\n      currentTemp,\r\n      error,\r\n      isLoading,\r\n      weekTemp,\r\n      favorites,\r\n      lat,\r\n      lng,\r\n      favoritesWeather,\r\n      wind,\r\n      weatherDescr,\r\n      wetness,\r\n      currentWeatherIcon,\r\n      weekIcons,\r\n    } = this.state;\r\n    return (\r\n      <div className={isLoading ? 'main-wrap loading' : 'main-wrap'}>\r\n        <div>\r\n          <form className=\"form\" onSubmit={this.handleSubmit}>\r\n            <div className=\"form__input-wrap\">\r\n              <div>\r\n                <svg\r\n                  fill=\"white\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"28\"\r\n                  height=\"28\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path d=\"M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 14c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6z\" />\r\n                </svg>\r\n              </div>\r\n              <Autocomplete\r\n                className=\"text-style-2\"\r\n                value={searchValue}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Type a location ...\"\r\n                onPlaceSelected={place => {\r\n                  console.log(place);\r\n                  this.checkRequest(place);\r\n                }}\r\n                types={['(regions)']}\r\n              />\r\n              <button type=\"button\" onClick={this.handleClick} name=\"send\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  fill=\"white\"\r\n                  width=\"28\"\r\n                  height=\"28\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path d=\"M23.809 21.646l-6.205-6.205c1.167-1.605 1.857-3.579 1.857-5.711 0-5.365-4.365-9.73-9.731-9.73-5.365 0-9.73 4.365-9.73 9.73 0 5.366 4.365 9.73 9.73 9.73 2.034 0 3.923-.627 5.487-1.698l6.238 6.238 2.354-2.354zm-20.955-11.916c0-3.792 3.085-6.877 6.877-6.877s6.877 3.085 6.877 6.877-3.085 6.877-6.877 6.877c-3.793 0-6.877-3.085-6.877-6.877z\" />\r\n                </svg>{' '}\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <div className=\"current-info__wrap\">\r\n            {currentTemp ? (\r\n              <div className=\"current-info\">\r\n                <div className=\"current-info__title-wrap\">\r\n                  <h1 className=\"current-info__title text-style-3\">{requestName}</h1>\r\n                  <button\r\n                    className=\"current-info__favorite-btn\"\r\n                    onClick={this.addToFavorites}\r\n                    type=\"button\"\r\n                  >\r\n                    <svg\r\n                      fill=\"white\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"28\"\r\n                      height=\"28\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path d=\"M12 5.173l2.335 4.817 5.305.732-3.861 3.71.942 5.27-4.721-2.524-4.721 2.525.942-5.27-3.861-3.71 5.305-.733 2.335-4.817zm0-4.586l-3.668 7.568-8.332 1.151 6.064 5.828-1.48 8.279 7.416-3.967 7.416 3.966-1.48-8.279 6.064-5.827-8.332-1.15-3.668-7.569z\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n                <p className=\"current-info__date\">{this.getCurrentDate()}</p>\r\n                <div className=\"current-info__info-wrap\">\r\n                  <div className=\"current-info__details\">\r\n                    <p>\r\n                      Wind <strong>{wind}</strong> ms\r\n                    </p>\r\n                    <p>\r\n                      Wetness <strong>{wetness}%</strong>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"current-info__icon-wrap\">\r\n                    <i className={convertIcon(currentWeatherIcon)} />\r\n                    <p>{weatherDescr}</p>\r\n                  </div>\r\n                  <p className=\"current-info__temp\">{currentTemp}°</p>\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            {error ? <p className=\"error\">{error}</p> : null}\r\n            {isLoading ? (\r\n              <div className=\"loader-wrap\">\r\n                <Loader />\r\n              </div>\r\n            ) : null}\r\n            {weekTemp ? <Week weekIcons={weekIcons} weekTemp={weekTemp} /> : null}\r\n          </div>\r\n        </div>\r\n        {favorites.length ? (\r\n          <FavoritesBar\r\n            removeFromFavorites={this.removeFromFavorites}\r\n            lat={lat}\r\n            lng={lng}\r\n            favorites={favorites}\r\n            getData={this.getData}\r\n            favoritesWeather={favoritesWeather}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets';\r\nimport './App.sass';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}